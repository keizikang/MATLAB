function color_guess_game

RGB_MAX = 255;

%% figure object

hf = figure('color','w',...
    'Units', 'normalized', ...
    'Resize', 'off', ...
    'MenuBar', 'none', ...
    'ToolBar', 'none', ...
    'NumberTitle', 'off', ...
    'Name', 'Color Code Game');
%     'PaperOrientation', 'landscape', ...
%     'PaperPosition', [0.00 0.04 .96 .96], ...
%     'PaperPositionMode', 'manual', ...
%     'PaperUnits', 'normalized', ...
% toolbar = allchild(hf);
% toolbar.Visible = 'off';

%% menubar

m_new_game = uimenu(hf, 'Text', 'New Game');
uimenu(m_new_game, ...
    'Text', 'New Game', ...
    'Accelerator', 'N', ...
    'MenuSelectedFcn', @new_game ...
);

m_Records = uimenu(hf, 'Text', 'Records');

records = [];
records_array = gobjects(1,5);

m_about = uimenu(hf, 'Text', 'About');
uimenu(m_about, 'Text', 'About', ...
    'MenuSelectedFcn', @show_about_window);

[about_image, ~, transparency] = imread('https://github.com/keizikang/MATLAB/blob/main/color_guess_game/about_image.png?raw=true');
about_image = imresize(about_image, 0.8);
transparency = imresize(transparency, 0.8);

%% solid color pane

target = randi([0, 255], [1, 3]);
img_target = zeros(1, 1, 3);
img_target(:,:,1) = target(1);
img_target(:,:,2) = target(2);
img_target(:,:,3) = target(3);
img_target = uint8(img_target);

ax1 = axes(Position = [0.0670 0.2095 0.4010 0.7285]);
img_target = imagesc(ax1, img_target);
ax1.XTick = [];
ax1.YTick = [];

img_user = uint8(zeros(1, 1, 3));
ax2 = axes(Position = [0.1271 0.3238 0.2833 0.4928]);
img_user = imagesc(ax2, img_user);
ax2.XTick = [];
ax2.YTick = [];
ax2.XColor = 'none';
ax2.YColor = 'none';
addlistener(img_user, 'CData', 'PostSet', @change_stopwatch_bgcolor);

text_target = uicontrol( ...
    'Style', 'text', ...
    'Units', 'normalized', ...
    'Position', [0.073, 0.867, 0.140, 0.065, ], ... 
    'String', 'target', ...
    'BackgroundColor', target/RGB_MAX, ...
    'ForegroundColor', (1-(rgb2gray(img_target.CData) > 128))*ones(1,3), ...
    'FontSize', 14  ...
    );

text_stopwatch = uicontrol( ...
    'Style', 'text', ...
    'Units', 'normalized', ...
    'Position', [0.2, 0.536, 0.14, 0.065, ], ... 
    'BackgroundColor', 'k', ...
    'ForegroundColor', text_target.ForegroundColor, ...
    'FontSize', 14  ...
    );


%% sliders and others

slider_R = uicontrol( ...
    'Style', 'slider', ...
    'Units', 'normalized', ...
    'Position', [0.548, 0.355, 0.0535, 0.595, ], ... 
    'UserData', gobjects(1, 2), ...
    'Min', 0, 'Max', RGB_MAX,  ...
    'SliderStep', [1/RGB_MAX, 25/RGB_MAX] ...
    );

slider_G = uicontrol( ...
    'Style', 'slider', ...
    'Units', 'normalized', ...
    'Position', [0.708, 0.355, 0.0535, 0.595, ], ... 
    'UserData', gobjects(1, 2), ...
    'Min', 0, 'Max', RGB_MAX,  ...
    'SliderStep', [1/RGB_MAX, 25/RGB_MAX] ...
    );

slider_B = uicontrol( ...
    'Style', 'slider', ...
    'Units', 'normalized', ...
    'Position', [0.868, 0.355, 0.0535, 0.595, ], ... 
    'UserData', gobjects(1, 2), ...
    'Min', 0, 'Max', RGB_MAX,  ...
    'SliderStep', [1/RGB_MAX, 25/RGB_MAX] ...
    );

addlistener(slider_R, 'Value', 'PostSet', @slider_moved);
addlistener(slider_G, 'Value', 'PostSet', @slider_moved);
addlistener(slider_B, 'Value', 'PostSet', @slider_moved);

slider_R.UserData(1) = uicontrol( ...
    'Style', 'text', ...
    'BackgroundColor', 'w', ...
    'String', 'R', ...
    'FontSize', 14, ...
    'Units', 'normalized', ...
    'Position', [0.535, 0.229, 0.0802, 0.08, ] ... 
    );

slider_G.UserData(1) = uicontrol( ...
    'Style', 'text', ...
    'BackgroundColor', 'w', ...
    'String', 'G', ...
    'FontSize', 14, ...
    'Units', 'normalized', ...
    'Position', [0.695, 0.229, 0.0802, 0.08, ] ... 
    );

slider_B.UserData(1) = uicontrol( ...
    'Style', 'text', ...
    'BackgroundColor', 'w', ...
    'String', 'B', ...
    'FontSize', 14, ...
    'Units', 'normalized', ...
    'Position', [0.855, 0.229, 0.0802, 0.08, ] ... 
    );

slider_R.UserData(2) = uicontrol( ...
    'Style', 'text', ...
    'Units', 'normalized', ...
    'Position', [0.515, 0.149, 0.124, 0.0881, ], ... 
    'BackgroundColor', 'w', ...
    'String', '0', ...
    'FontSize', 14  ...
    );

slider_G.UserData(2) = uicontrol( ...
    'Style', 'text', ...
    'Units', 'normalized', ...
    'Position', [0.675, 0.149, 0.124, 0.0881, ], ... 
    'BackgroundColor', 'w', ...
    'String', '0', ...
    'FontSize', 14  ...
    );

slider_B.UserData(2) = uicontrol( ...
    'Style', 'text', ...
    'Units', 'normalized', ...
    'Position', [0.835, 0.149, 0.124, 0.0881, ], ... 
    'BackgroundColor', 'w', ...
    'String', '0', ...
    'FontSize', 14  ...
    );

text_msg = uicontrol( ...
    'Style', 'text', ...
    'Units', 'normalized', ...
    'Position', [0.1, 0.0423, 0.808, 0.0881, ], ... 
    'String', 'Let''s get started!', ...
    'BackgroundColor', [1, 1, 1, ], ...
    'ForegroundColor', [0, 0, 0, ], ...
    'FontSize', 14  ...
    );

t0 = tic;
dt = 0;
solved = 0;

    function slider_moved(~, e)
        h = e.AffectedObject;
        h.UserData(2).String = round(h.Value);

% % I am not sure which is better...
%
%         switch h.UserData(1).String
%             case 'R'
%                 h.UserData(1).ForegroundColor = [h.Value, 0, 0]/RGB_MAX;
%                 h.UserData(2).ForegroundColor = [h.Value, 0, 0]/RGB_MAX;
%             case 'G'
%                 h.UserData(1).ForegroundColor = [0, h.Value, 0]/RGB_MAX;
%                 h.UserData(2).ForegroundColor = [0, h.Value, 0]/RGB_MAX;
%             case 'B'
%                 h.UserData(1).ForegroundColor = [0, 0, h.Value]/RGB_MAX;
%                 h.UserData(2).ForegroundColor = [0, 0, h.Value]/RGB_MAX;
%         end
        
        slider_R.UserData(1).ForegroundColor = [slider_R.Value, 0, 0]/RGB_MAX;
        slider_R.UserData(2).ForegroundColor = [slider_R.Value, 0, 0]/RGB_MAX;
        slider_G.UserData(1).ForegroundColor = [0, slider_G.Value, 0]/RGB_MAX;
        slider_G.UserData(2).ForegroundColor = [0, slider_G.Value, 0]/RGB_MAX;
        slider_B.UserData(1).ForegroundColor = [0, 0, slider_B.Value]/RGB_MAX;
        slider_B.UserData(2).ForegroundColor = [0, 0, slider_B.Value]/RGB_MAX;

        img_user.CData(:,:,1) = slider_R.Value;
        img_user.CData(:,:,2) = slider_G.Value;
        img_user.CData(:,:,3) = slider_B.Value;
        color_diff = abs([ ...
            round(slider_R.Value)-target(1), ...
            round(slider_G.Value)-target(2), ...
            round(slider_B.Value)-target(3), 
            ]);
        if max(color_diff) < 10
            text_msg.String = sprintf('There you go! (Exact answer: %d, %d, %d)', target);
            if solved == 0
                dt = toc(t0);
                text_stopwatch.String = sprintf('%.1fs', dt);
                solved = 1;
                records = [string(sprintf('%04.1fs',dt)), records];
                records_array = [
                    uimenu(m_Records, 'Text', records(1)), ...
                    records_array(1:4)
                    ];
                uistack(m_Records.Children(1), 'bottom')
                if length(records) > 5
                    records = records(1:5);
                    records_array = records_array(1:5);
                    delete(m_Records.Children(1:end-5));
                end
            end
        elseif max(color_diff) < 20
            text_msg.String = sprintf('Almost there...! (max. diff. = %d)', round(max(color_diff)));
        elseif max(color_diff) < 40
            text_msg.String = 'Little more... little more...';
        elseif max(color_diff) < 70
            text_msg.String = 'Getting close...';
        else
            text_msg.String = 'Too far from the target...';
        end
    end

    function new_game(~, ~)
        target = randi([0, 255], [1, 3]);
        disp(target)
        img_target.CData(:,:,1) = target(1);
        img_target.CData(:,:,2) = target(2);
        img_target.CData(:,:,3) = target(3);
        text_target.BackgroundColor = target/RGB_MAX;
        text_target.ForegroundColor = (1-(rgb2gray(img_target.CData) > 128))*ones(1,3);
        text_stopwatch.ForegroundColor = text_target.ForegroundColor;
        text_stopwatch.String = '';
        t0 = tic;
        solved = 0;
    end

    function change_stopwatch_bgcolor(~, ~)
        text_stopwatch.BackgroundColor = double(reshape(img_user.CData, 1, 3))/RGB_MAX;
    end

    function show_about_window(~,~)
        if isempty(findobj('type', 'figure', 'tag', 'about'))
            h_about_figure = figure('color','w',...
                'Units', 'normalized', ...
                'Resize', 'off', ...
                'MenuBar', 'none', ...
                'ToolBar', 'none', ...
                'Tag', 'about', ...
                'NumberTitle', 'off', ...
                'Name', 'About' ...
                );
            h_about_figure.Position(3:4) = [0.1833 0.2380];
            axes('Units', 'normalized', ...
                'Position', [0, 0.1, 1, .9])
            h_about_image = imshow(about_image);
            h_about_image.AlphaData = transparency;
            h_about_image.ButtonDownFcn = @(~,~) web('https://github.com/keizikang/MATLAB/tree/main/color_guess_game');
        else
            figure(findobj('type', 'figure', 'tag', 'about'))
        end
    end
end